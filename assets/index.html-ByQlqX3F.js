import{_ as r,c as o,d as t,a as e,e as i,f as a,r as d,o as h}from"./app-BMPv-Bde.js";const m={},c={class:"hint-container details"},k={class:"vp-file-tree"},u={class:"tree-node folder"},v={class:"tree-node file"},f={class:"tree-node file"},y={class:"tree-node file"},A={class:"tree-node file"},b={class:"tree-node file"},g={class:"tree-node file"},D={class:"tree-node folder"},B={class:"tree-node folder"},E={class:"tree-node folder"},x={class:"tree-node folder"},C={class:"tree-node folder"},_={class:"vp-steps"};function X(T,s){const l=d("VPIcon"),n=d("FileTreeItem"),p=d("LinkCard");return h(),o("div",null,[s[30]||(s[30]=t(`<div class="hint-container note"><p class="hint-container-title">本篇目标：演示如何通过组合已适配的算法，并进行调参调优后，实现无人机自主避障飞行至预设的目标点</p></div><p>这里是一个完整的自主飞行的示例：</p><div><video width="900" controls><source src="https://file.emnavi.tech/MEDIA_ASSETS/X152b/autonomous_navigation_flight_demo.mp4" type="video/mp4"> 您的浏览器不支持 video 标签。 </video></div><p>接下来让我们一步一步来复现该实验：</p><h3 id="一、下载项目代码最新版本" tabindex="-1"><a class="header-anchor" href="#一、下载项目代码最新版本"><span>一、下载项目代码最新版本</span></a></h3><div class="language-bash line-numbers-mode" data-ext="bash" data-title="bash"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">git</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> clone</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> --recursive</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> https://github.com/emnavi/X152b.git</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 编译 (首次编译时耗时较长，需要耐心等待)</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">cd</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> X152b</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">catkin_make</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -j4</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,6)),e("details",c,[s[26]||(s[26]=e("summary",null,"不了解本项目各模块功能用途？",-1)),s[27]||(s[27]=e("p",null,"本项目提供了丰富的前沿无人机自主飞行算法，你可以通过这个文件树来简单了解该项目的各文件主要功能：",-1)),e("div",k,[e("ul",null,[i(n,{type:"folder",expanded:!0,empty:!1},{default:a(()=>[e("span",u,[i(l,{name:"vscode-icons:folder-type-script"}),s[0]||(s[0]=e("span",{class:"name"},"scripts",-1)),s[1]||(s[1]=e("span",{class:"comment"}," # 存放常用工具脚本",-1))]),e("ul",null,[i(n,{type:"file",expanded:!1,empty:!0},{default:a(()=>[e("span",v,[i(l,{name:"vscode-icons:file-type-shell"}),s[2]||(s[2]=e("span",{class:"name"},"init_uav.sh",-1)),s[3]||(s[3]=e("span",{class:"comment"},"# 无人机初始化",-1))])]),_:1}),i(n,{type:"file",expanded:!1,empty:!0},{default:a(()=>[e("span",f,[i(l,{name:"vscode-icons:file-type-shell"}),s[4]||(s[4]=e("span",{class:"name"},"kill_uav.sh",-1)),s[5]||(s[5]=e("span",{class:"comment"},"# 关闭所有程序",-1))])]),_:1}),i(n,{type:"file",expanded:!1,empty:!0},{default:a(()=>[e("span",y,[i(l,{name:"vscode-icons:file-type-shell"}),s[6]||(s[6]=e("span",{class:"name"},"take_off.sh",-1)),s[7]||(s[7]=e("span",{class:"comment"},"# 起飞",-1))])]),_:1}),i(n,{type:"file",expanded:!1,empty:!0},{default:a(()=>[e("span",A,[i(l,{name:"vscode-icons:file-type-shell"}),s[8]||(s[8]=e("span",{class:"name"},"land.sh",-1)),s[9]||(s[9]=e("span",{class:"comment"},"# 降落",-1))])]),_:1}),i(n,{type:"file",expanded:!1,empty:!0},{default:a(()=>[e("span",b,[i(l,{name:"vscode-icons:file-type-shell"}),s[10]||(s[10]=e("span",{class:"name"},"run_vinsfusion.sh",-1)),s[11]||(s[11]=e("span",{class:"comment"},"# 运行 Vins-Fusion 视觉里程计算法",-1))])]),_:1}),i(n,{type:"file",expanded:!1,empty:!0},{default:a(()=>[e("span",g,[i(l,{name:"vscode-icons:file-type-shell"}),s[12]||(s[12]=e("span",{class:"name"},"run_egoplanner.sh",-1)),s[13]||(s[13]=e("span",{class:"comment"},"# 运行 Ego-Planner 规划算法",-1))])]),_:1})])]),_:1}),i(n,{type:"folder",expanded:!0,empty:!1},{default:a(()=>[e("span",D,[i(l,{name:"vscode-icons:folder-type-src"}),s[14]||(s[14]=e("span",{class:"name"},"src",-1)),s[15]||(s[15]=e("span",{class:"comment"},"# 存放代码文件",-1))]),e("ul",null,[i(n,{type:"folder",expanded:!1,empty:!0},{default:a(()=>[e("span",B,[i(l,{name:"vscode-icons:default-folder"}),s[16]||(s[16]=e("span",{class:"name"},"global_interface",-1)),s[17]||(s[17]=e("span",{class:"comment"},"# 接口层（存放参数文件、通讯接口等）",-1))])]),_:1}),i(n,{type:"folder",expanded:!0,empty:!1},{default:a(()=>[e("span",E,[i(l,{name:"vscode-icons:default-folder"}),s[18]||(s[18]=e("span",{class:"name"},"emnavi_sdk",-1)),s[19]||(s[19]=e("span",{class:"comment"},"# 各类基础功能实现",-1))]),e("ul",null,[i(n,{type:"file",expanded:!1,empty:!0},{default:a(()=>s[20]||(s[20]=[e("span",{class:"tree-node file"},[e("span",{class:"name"},"..."),e("span",{class:"comment"},"# 飞控驱动、相机驱动、通讯驱动等实现")],-1)])),_:1})])]),_:1}),i(n,{type:"folder",expanded:!0,empty:!1},{default:a(()=>[e("span",x,[i(l,{name:"vscode-icons:default-folder"}),s[21]||(s[21]=e("span",{class:"name"},"算法1",-1))]),e("ul",null,[i(n,{type:"file",expanded:!1,empty:!0},{default:a(()=>s[22]||(s[22]=[e("span",{class:"tree-node file"},[e("span",{class:"name"},"...")],-1)])),_:1})])]),_:1}),i(n,{type:"folder",expanded:!1,empty:!1},{default:a(()=>[e("span",C,[i(l,{name:"vscode-icons:default-folder"}),s[23]||(s[23]=e("span",{class:"name"},"算法2",-1))]),e("ul",null,[i(n,{type:"file",expanded:!1,empty:!0},{default:a(()=>s[24]||(s[24]=[e("span",{class:"tree-node file"},[e("span",{class:"name"},"...")],-1)])),_:1})])]),_:1}),i(n,{type:"file",expanded:!1,empty:!0},{default:a(()=>s[25]||(s[25]=[e("span",{class:"tree-node file"},[e("span",{class:"name"},"..."),e("span",{class:"comment"},"# 更多适配算法持续更新中")],-1)])),_:1})])]),_:1})])])]),s[31]||(s[31]=e("h3",{id:"二、验证视觉里程计功能",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#二、验证视觉里程计功能"},[e("span",null,"二、验证视觉里程计功能")])],-1)),s[32]||(s[32]=e("p",null,"由于无人机的定位依靠里程计完成，因此首先需要验证视觉里程计运行良好。",-1)),i(p,{title:"启动 Vins-Fusion 视觉里程计",href:"/X152b/Vins-Fusion视觉里程计/#算法使用"}),s[33]||(s[33]=e("h3",{id:"三、验证无人机起降功能",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#三、验证无人机起降功能"},[e("span",null,"三、验证无人机起降功能")])],-1)),s[34]||(s[34]=e("p",null,"有了良好的定位后，此时可以验证无人机起降是否正常。",-1)),e("div",_,[s[28]||(s[28]=t(`<ul><li><h4 id="准备工作" tabindex="-1"><a class="header-anchor" href="#准备工作"><span>准备工作</span></a></h4><p>做好飞行准备，确保电量充足。</p></li><li><h4 id="从地面起飞" tabindex="-1"><a class="header-anchor" href="#从地面起飞"><span>从地面起飞</span></a></h4><p>执行脚本后，脚本会向飞机的 <code>/emnavi_cmd/takeoff</code> 话题发送一个起飞消息，使得飞机到达悬停目标点。</p><p>悬停目标点默认设置为 <code>[0, 0, 0.5]</code>, 即飞机飞到距地 0.5 米的位置然后悬停。</p><div class="language-bash line-numbers-mode" data-ext="bash" data-title="bash"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 在无人机电脑的终端内执行</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">cd</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> X152b</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">bash</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> scripts/take_off.sh</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div> <div><video width="800" controls><source src="https://file.emnavi.tech/MEDIA_ASSETS/X152b/takeoff_demo.mp4" type="video/mp4"> 您的浏览器不支持 video 标签。 </video></div><h3 id="" tabindex="-1"><a class="header-anchor" href="#"><span></span></a></h3></li><li><h4 id="从空中降落" tabindex="-1"><a class="header-anchor" href="#从空中降落"><span>从空中降落</span></a></h4><p>执行脚本后，脚本会向飞机的 <code>/emnavi_cmd/land</code> 话题发送一个降落消息。</p><p>降落消息会使飞机降落到 <code>[0, 0, 0]</code> 处， 然后停桨。</p><div class="language-bash line-numbers-mode" data-ext="bash" data-title="bash"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 在无人机电脑的终端内执行</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">cd</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> X152b</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">bash</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> scripts/land.sh</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div> <div><video width="800" controls><source src="https://file.emnavi.tech/MEDIA_ASSETS/X152b/landing_demo.mp4" type="video/mp4"> 您的浏览器不支持 video 标签。 </video></div></li></ul><p>至此，能确保无人机能正常依靠里程计信息到达预设的目标点（悬停点和降落点），下面可以进行预设一系列的目标点进行自主飞行了。</p><h3 id="四、验证轨迹规划功能" tabindex="-1"><a class="header-anchor" href="#四、验证轨迹规划功能"><span>四、验证轨迹规划功能</span></a></h3>`,3)),i(p,{title:"启动 Ego-Planner 规划算法",href:"/X152b/Ego-Planner规划算法/#算法使用"}),s[29]||(s[29]=t(`<h3 id="完整自主飞行试验命令参考" tabindex="-1"><a class="header-anchor" href="#完整自主飞行试验命令参考"><span>完整自主飞行试验命令参考</span></a></h3><p>至此，你可以加熟悉自主飞行的流程了，要想复现本文开头视频中的自主飞行试验，完整步骤命令如下：</p><div class="language-bash line-numbers-mode" data-ext="bash" data-title="bash"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 在无人机电脑的终端内执行</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">cd</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> X152b</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 先关闭所有程序</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">bash</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> scripts/kill_uav.sh</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 无人机初始化</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">bash</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> scripts/init_uav.sh</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 运行 Vins-Fusion 视觉里程计算法</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">bash</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> scripts/run_vinsfusion.sh</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 起飞，等待片刻飞机将起飞</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">bash</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> scripts/take_off.sh</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 当飞机起飞定高稳定后，再运行 Ego-Planner 规划算法</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">bash</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> scripts/run_egoplanner.sh</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 当 Ego-Planner 运行结束后进行降落</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">bash</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> scripts/land.sh</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 关闭所有程序</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">bash</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> scripts/kill_uav.sh</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container warning"><p class="hint-container-title">由于视觉里程计会存在累计误差，建议每次使用时，应当重新执行一遍所有流程，而不是重复利用之前已开启的里程计。</p></div>`,4))])])}const V=r(m,[["render",X],["__file","index.html.vue"]]),F=JSON.parse('{"path":"/X152b/%E7%BB%84%E5%90%88%E7%AE%97%E6%B3%95%E8%BF%9B%E8%A1%8C%E8%87%AA%E4%B8%BB%E9%A3%9E%E8%A1%8C/","title":"组合算法进行自主飞行","lang":"zh-CN","frontmatter":{"title":"组合算法进行自主飞行","createTime":"2024/10/20 00:09:46","permalink":"/X152b/组合算法进行自主飞行/","readingTime":false,"description":"本篇目标：演示如何通过组合已适配的算法，并进行调参调优后，实现无人机自主避障飞行至预设的目标点 这里是一个完整的自主飞行的示例： 接下来让我们一步一步来复现该实验： 一、下载项目代码最新版本 不了解本项目各模块功能用途？ 本项目提供了丰富的前沿无人机自主飞行算法，你可以通过这个文件树来简单了解该项目的各文件主要功能： 二、验证视觉里程计功能 由于无人机...","head":[["meta",{"property":"og:url","content":"https://emnavi.tech/X152b/%E7%BB%84%E5%90%88%E7%AE%97%E6%B3%95%E8%BF%9B%E8%A1%8C%E8%87%AA%E4%B8%BB%E9%A3%9E%E8%A1%8C/"}],["meta",{"property":"og:site_name","content":"emNavi"}],["meta",{"property":"og:title","content":"组合算法进行自主飞行"}],["meta",{"property":"og:description","content":"本篇目标：演示如何通过组合已适配的算法，并进行调参调优后，实现无人机自主避障飞行至预设的目标点 这里是一个完整的自主飞行的示例： 接下来让我们一步一步来复现该实验： 一、下载项目代码最新版本 不了解本项目各模块功能用途？ 本项目提供了丰富的前沿无人机自主飞行算法，你可以通过这个文件树来简单了解该项目的各文件主要功能： 二、验证视觉里程计功能 由于无人机..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-10-27T07:04:41.000Z"}],["meta",{"property":"article:modified_time","content":"2025-10-27T07:04:41.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"组合算法进行自主飞行\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-10-27T07:04:41.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":3,"title":"一、下载项目代码最新版本","slug":"一、下载项目代码最新版本","link":"#一、下载项目代码最新版本","children":[]},{"level":3,"title":"二、验证视觉里程计功能","slug":"二、验证视觉里程计功能","link":"#二、验证视觉里程计功能","children":[]},{"level":3,"title":"三、验证无人机起降功能","slug":"三、验证无人机起降功能","link":"#三、验证无人机起降功能","children":[]}],"readingTime":{"minutes":3.24,"words":973},"git":{"createdTime":1729388885000,"updatedTime":1761548681000,"contributors":[{"name":"Derkai","email":"2363104914@qq.com","commits":3}]},"autoDesc":true,"filePathRelative":"notes/X152b/2.算法部署/1.组合你的算法并部署.md"}');export{V as comp,F as data};
