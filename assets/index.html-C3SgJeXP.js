import{_ as e,c as t,d as s,o as a}from"./app-BMPv-Bde.js";const l={};function n(r,i){return a(),t("div",null,i[0]||(i[0]=[s(`<div align="center"><img src="https://emnavi-doc-img.oss-cn-beijing.aliyuncs.com/emnavi_video/airgym/ctl_pipeline.png" width="600"></div><p><strong style="color:pink;">rlPx4Controller</strong> (<a href="https://github.com/emNavi/rlPx4Controller">https://github.com/emNavi/rlPx4Controller</a>) is a quadcopter control library implemented in C++ and provides a python interface through pybind11. The motivation of this work is to build a parallel flight control for large-scale quadrotor reinforcement learning (RL) and Sim-to-Real on the PX4 stack. Thus, the implementation of the controller is consistent with the Px4 flight control to ensure the consistency of sim2real.</p><h3 id="features" tabindex="-1"><a class="header-anchor" href="#features"><span>Features</span></a></h3><ul><li>CPU-based parallel flight geometric control computation.</li><li>Strict PX4-like flight controller with differential flatness.</li><li>Parallel control for different levels that supports: position &amp; yaw control (PY), velocity &amp; yaw control (LV), collective thrust &amp; attitude angle (CTA), collective thrust &amp; body rate (CTBR)</li></ul><p>4 modules have been implemented so far:</p><ul><li>PolyTrajGen: Fifth degree polynomial trajectory generation</li><li>Lemniscate: Figure-eight curve generation</li><li>pyControl: Single aircraft controller</li><li>pyParallelControl：Multi-aircraft controller for reinforcement learning in vectorized environments.</li></ul><h3 id="usage" tabindex="-1"><a class="header-anchor" href="#usage"><span>Usage</span></a></h3><p>rlPx4Controller provides a very simple way to install and use:</p><p>Install:</p><div class="language-bash line-numbers-mode" data-ext="bash" data-title="bash"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">git</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> clone</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> git@github.com:emNavi/rlPx4Controller.git</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">cd</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> rlPx4Controller</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">pip</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> install</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -e</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> .</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Use:</p><div class="language-bash line-numbers-mode" data-ext="bash" data-title="bash"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">from</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> rlPx4Controller</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> import</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> ParallelRateControl,</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> ParallelVelControl,</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> ParallelAttiControl,</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> ParallelPosControl</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># According to which control layer is selected</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># Use Rate control as an example</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">controller</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> =</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> ParallelRateControl</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">num_envs</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">controller.set_status(status,</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> dt</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">)</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">cmd_thrusts</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> =</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> controller.update</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">actions</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>num_envs</code> denotes how many environments are paralleled, <code>dt</code> is controller&#39;s simulation interval. <code>set_status()</code> inputs the status of the drone, including position, attitude in quaternion, linear velocity, and angular velocity. <code>update()</code> returns commands of thrust.</p>`,13)]))}const p=e(l,[["render",n],["__file","index.html.vue"]]),h=JSON.parse('{"path":"/AirGym/rlPx4Controller/","title":"rlPx4Controller","lang":"zh-CN","frontmatter":{"title":"rlPx4Controller","createTime":"2025/01/26 17:55:35","permalink":"/AirGym/rlPx4Controller/","icon":"grommet-icons:install","description":"rlPx4Controller (https://github.com/emNavi/rlPx4Controller) is a quadcopter control library implemented in C++ and provides a python interface through pybind11. The motivation o...","head":[["meta",{"property":"og:url","content":"https://emnavi.tech/AirGym/rlPx4Controller/"}],["meta",{"property":"og:site_name","content":"emNavi"}],["meta",{"property":"og:title","content":"rlPx4Controller"}],["meta",{"property":"og:description","content":"rlPx4Controller (https://github.com/emNavi/rlPx4Controller) is a quadcopter control library implemented in C++ and provides a python interface through pybind11. The motivation o..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-01-29T16:21:59.000Z"}],["meta",{"property":"article:modified_time","content":"2025-01-29T16:21:59.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"rlPx4Controller\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-01-29T16:21:59.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":3,"title":"Features","slug":"features","link":"#features","children":[]},{"level":3,"title":"Usage","slug":"usage","link":"#usage","children":[]}],"readingTime":{"minutes":0.88,"words":263},"git":{"createdTime":1738167719000,"updatedTime":1738167719000,"contributors":[{"name":"kjaebye","email":"kangyao.huang@outlook.com","commits":1}]},"autoDesc":true,"filePathRelative":"notes/AirGym/rlPx4Controller/README.md"}');export{p as comp,h as data};
